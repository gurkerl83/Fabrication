<?xml version="1.0"?>
<project name="fabrication" default="main">

    <!-- load user properties -->
    <property file="project.properties"/>
    <property file="user.properties"/>
    <import file="${basedir}/etc/ant/build.tools.xml"/>

    <property name="src.dir" value="${basedir}/src"/>
    <property name="rpc.src.dir" value="${basedir}/src_rpc"/>


    <target name="main"
            description="runs tests, builds libraries, generates docmentation and prepares distribution package">

        <delete dir="${bin.dir}"/>
        <delete dir="${dist.dir}"/>
        <mkdir dir="${bin.dir}"/>
        <ant antfile="build.tests.xml"/>
        <antcall target="compile.fabrication.library"/>
        <antcall target="generate.documentation"/>
        <antcall target="prepare.distribution.package"/>
        <antcall target="publish.to.blog"/>

    </target>


    <target name="compile.fabrication.library" description="compiles fabrication libraries ( air, flex, as3 )">
        <delete dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}"/>


        <pathconvert pathsep=" " property="all" dirsep=".">
            <fileset dir="${src.dir}"/>
            <chainedmapper>
                <globmapper from="${src.dir}/" to=""/>
                <globmapper from="*.as" to="*"/>
            </chainedmapper>
        </pathconvert>


        <pathconvert pathsep=" " property="all_moxie" dirsep=".">
            <fileset dir="${src.dir}">
                <exclude name="**/*FlexApplication*.*"/>
                <exclude name="**/*AirApplication*.*"/>
            </fileset>
            <chainedmapper>
                <globmapper from="${src.dir}/" to=""/>
                <globmapper from="*.as" to="*"/>
            </chainedmapper>
        </pathconvert>


        <pathconvert pathsep=" " property="no_air" dirsep=".">
            <fileset dir="${src.dir}">
                <exclude name="**/*Air*.*"/>
            </fileset>
            <chainedmapper>
                <globmapper from="${src.dir}/" to=""/>
                <globmapper from="*.as" to="*"/>
            </chainedmapper>
        </pathconvert>

        <pathconvert pathsep=" " property="no_air_moxie" dirsep=".">
            <fileset dir="${src.dir}">
                <exclude name="**/*Air*.*"/>
                <exclude name="**/*FlexApplication*.*"/>
            </fileset>
            <chainedmapper>
                <globmapper from="${src.dir}/" to=""/>
                <globmapper from="*.as" to="*"/>
            </chainedmapper>
        </pathconvert>

        <pathconvert pathsep=" " property="no_air_flex" dirsep=".">
            <fileset dir="${src.dir}">
                <exclude name="**/*Air*.*"/>
                <exclude name="**/*Flex*.*"/>
                <exclude name="**/*ModuleLoader*.*"/>
                <exclude name="**/resolver/*.*"/>
            </fileset>
            <chainedmapper>
                <globmapper from="${src.dir}/" to=""/>
                <globmapper from="*.as" to="*"/>
            </chainedmapper>
        </pathconvert>

        <compile.fabrication.library air="true" swc.name="fabrication-air" classes.list="${all}">
            <namespace>
                <arg line="-namespace ${fabrication.namespace} ${basedir}/etc/manifests/fabrication-air-manifest.xml"/>
                <arg line="-include-namespaces ${fabrication.namespace}"/>
            </namespace>
        </compile.fabrication.library>

        <compile.fabrication.library air="true" swc.name="fabrication-air-moxie" classes.list="${all_moxie}"
                                     flex4.supported="false">
            <namespace>
                <arg line="-namespace ${fabrication.namespace} ${basedir}/etc/manifests/fabrication-air-moxie-manifest.xml"/>
                <arg line="-include-namespaces ${fabrication.namespace}"/>
            </namespace>
        </compile.fabrication.library>


        <compile.fabrication.library air="false" swc.name="fabrication-flex" classes.list="${no_air}">

            <namespace>
                <arg line="-namespace ${fabrication.namespace} ${basedir}/etc/manifests/fabrication-flex-manifest.xml"/>
                <arg line="-include-namespaces ${fabrication.namespace}"/>
            </namespace>
        </compile.fabrication.library>

        <compile.fabrication.library air="false" swc.name="fabrication-flex-moxie"
                                     classes.list="${no_air_moxie}" flex4.supported="false">
            <namespace>
                <arg line="-namespace ${fabrication.namespace} ${basedir}/etc/manifests/fabrication-flex-moxie-manifest.xml"/>
                <arg line="-include-namespaces ${fabrication.namespace}"/>
            </namespace>
        </compile.fabrication.library>


        <compile.fabrication.library air="false" swc.name="fabrication-as3" classes.list="${no_air_flex}"/>

        <!-- add-ons -->

        <!-- RPC -->

        <pathconvert pathsep=" " property="fabrication_rpc" dirsep=".">
            <fileset dir="${basedir}/src_rpc">

            </fileset>
            <chainedmapper>
                <globmapper from="${basedir}/src_rpc/" to=""/>
                <globmapper from="*.as" to="*"/>
            </chainedmapper>
        </pathconvert>

        <mkdir dir="${bin.dir}/fabrication-rpc"/>
        <mkdir dir="${bin.dir}/fabrication-rpc/rsl"/>

        <exec executable="${flex.compc}" failonerror="true" failifexecutionfails="true">

            <arg line="+flex.home=${flex.home}"/>
            <arg line="-include-classes ${fabrication_rpc} org.puremvc.as3.multicore.utilities.fabrication.services.FabricationService"/>
            <arg line="-load-config fabrication-config.xml"/>
            <arg line="-source-path+=${basedir}/src_rpc"/>
            <arg line="-external-library-path+=${bin.dir}/fabrication-air"/>
            <arg line="-external-library-path+=${flex.home}/"/>
            <arg line="-namespace ${fabrication.namespace} ${basedir}/etc/manifests/fabrication-rpc-manifest.xml"/>
            <arg line="-include-namespaces ${fabrication.namespace}"/>
            <arg line="-output ${bin.dir}/fabrication-rpc/fabrication-rpc.swc"/>
            <!--<arg line="-link-report=${bin.dir}/fabrication_rpc.swc.xml"/>-->

        </exec>

        <exec executable="${flex.compc}" failonerror="true" failifexecutionfails="true">

            <arg line="+flex.home=${flex.home}"/>
            <arg line="-include-classes ${fabrication_rpc} org.puremvc.as3.multicore.utilities.fabrication.services.FabricationService"/>
            <arg line="-load-config fabrication-config.xml"/>
            <arg line="-source-path+=${basedir}/src_rpc"/>
            <arg line="-external-library-path+=${bin.dir}/fabrication-air"/>
            <arg line="-external-library-path+=${flex.home}/"/>
            <arg line="-namespace ${fabrication.namespace} ${basedir}/etc/manifests/fabrication-rpc-manifest.xml"/>
            <arg line="-include-namespaces ${fabrication.namespace}"/>
            <arg line="-debug=false"/>
            <arg line="-optimize=true"/>
            <arg line="-output ${bin.dir}/fabrication-rpc/rsl/fabrication-rpc.swc"/>

        </exec>
        <unzip src="${bin.dir}/fabrication-rpc/rsl/fabrication-rpc.swc" dest="${bin.dir}/fabrication-rpc/rsl"/>
        <move file="${bin.dir}/fabrication-rpc/rsl/library.swf" tofile="${bin.dir}/fabrication-rpc/rsl/fabrication-rpc.swf"/>
        <delete file="${bin.dir}/fabrication-rpc/rsl/catalog.xml"/>

        <!--<exec executable="${flex.optimizer}" failonerror="true" failifexecutionfails="true">-->
            <!--<arg line="-keep-as3-metadata Inject InjectProxy InjectMediator InjectService"/>-->
            <!--<arg line="-input ${bin.dir}/rsl/fabrication_rpc/library.swf"/>-->
            <!--<arg line="-output ${bin.dir}/rsl/fabrication_rpc/library.swf"/>-->
        <!--</exec>-->


    </target>


    <target name="generate.documentation" description="generates full and public API documentation">
        <delete dir="${doc.dir}"/>
        <mkdir dir="${doc.dir}"/>

        <antcall target="generate.full.documentation"/>
        <antcall target="generate.public.documentation"/>

    </target>

    <target name="generate.full.documentation">
        <mkdir dir="${asdoc.full.dir}"/>
        <exec executable="${flex.asdoc}" failonerror="true">
            <arg line="-window-title='${doc.title}'"/>
            <arg line="-footer='${doc.footer}'"/>
            <arg line="-doc-sources ${src.dir}"/>
            <arg line="-source-path=${src.dir}"/>
            <arg line="-external-library-path ${puremvc.lib}"/>
            <arg line="-external-library-path ${reflection.lib}"/>
            <arg line="-external-library-path ${flex.home}/frameworks/libs"/>
            <arg line="-external-library-path ${flex.home}/frameworks/libs/air"/>
            <arg line="-output=${asdoc.full.dir}"/>
            <arg line="-define+=FLEX4::supported,true"/>
        </exec>

        <exec executable="${flex.asdoc}" failonerror="true">
            <arg line="-window-title='${doc.title}'"/>
            <arg line="-footer='${doc.footer}'"/>
            <arg line="-doc-sources ${rpc.src.dir}"/>
            <arg line="-source-path=${rpc.src.dir}"/>
            <arg line="-external-library-path ${bin.dir}/fabrication-air/fabrication-air.swc"/>
            <!--<arg line="-external-library-path ${reflection.lib}"/>-->
            <!--<arg line="-external-library-path ${flex.home}/frameworks/libs"/>-->
            <!--<arg line="-external-library-path ${flex.home}/frameworks/libs/air"/>-->
            <arg line="-output=${asdoc.rpc.dir}"/>
            <arg line="-define+=FLEX4::supported,true"/>
        </exec>

    </target>

    <target name="generate.public.documentation">

        <mkdir dir="${asdoc.public.dir}"/>

        <copy file="${basedir}/etc/public_api.txt" tofile="${basedir}/public_api.txt" overwrite="yes">
            <filterchain>
                <tokenfilter>
                    <containsregex pattern="^(.*)$" replace="**/\1.as" flags="gi"/>
                </tokenfilter>
            </filterchain>
        </copy>
        <fileset id="flist" dir="${src.dir}" includesfile="${basedir}/public_api.txt"/>
        <pathconvert refid="flist" pathsep=" " property="flist.path"/>
        <echo message="${flist.path}"/>
        <delete file="${basedir}/public_api.txt"/>

        <exec executable="${flex.asdoc}" failonerror="true">
            <arg line="-window-title='${doc.title} - public API'"/>
            <arg line="-footer='${doc.footer}'"/>
            <arg line="-doc-sources ${flist.path}"/>
            <arg line="-l=${bin.dir}/fabrication-air/fabrication-air.swc"/>
            <arg line="-external-library-path ${puremvc.lib}"/>
            <arg line="-external-library-path ${reflection.lib}"/>
            <arg line="-external-library-path ${flex.home}/frameworks/libs"/>
            <arg line="-external-library-path ${flex.home}/frameworks/libs/air"/>
            <arg line="-output=${asdoc.public.dir}"/>
            <arg line="-define+=FLEX4::supported,true"/>
        </exec>
    </target>

    <target name="prepare.distribution.package" description="prepares distribution package">

        <mkdir dir="${dist.dir}"/>

        <dist dist.name="air" dist.version="${fabrication.version}"/>
        <dist dist.name="air-moxie" dist.version="${fabrication.version}"/>
        <dist dist.name="flex" dist.version="${fabrication.version}"/>
        <dist dist.name="flex-moxie" dist.version="${fabrication.version}"/>
        <dist dist.name="as3" dist.version="${fabrication.version}"/>
        <dist dist.name="rpc" dist.version="${fabrication.version}"/>
        <!--<copy file="${bin.dir}/fabrication_air.swc" tofile="${dist.dir}/fabrication-${fabrication.version}-air.swc"-->
              <!--overwrite="true"/>-->
        <!--<copy file="${bin.dir}/rsl/fabrication_air/library.swf"-->
              <!--tofile="${dist.dir}/fabrication-${fabrication.version}-air.swf"-->
              <!--overwrite="true"/>-->
        <!--<zip destfile="${dist.dir}/fabrication-${fabrication.version}-air.zip">-->
            <!--<fileset dir="${dist.dir}">-->
                <!--<include name="fabrication-${fabrication.version}-air.swc"/>-->
                <!--<include name="fabrication-${fabrication.version}-air.swf"/>-->
            <!--</fileset>-->
        <!--</zip>-->

        <!--<copy file="${bin.dir}/fabrication_air_moxie.swc"-->
              <!--tofile="${dist.dir}/fabrication-${fabrication.version}-air-moxie.swc"-->
              <!--overwrite="true"/>-->
        <!--<copy file="${bin.dir}/rsl/fabrication_air_moxie/library.swf"-->
              <!--tofile="${dist.dir}/fabrication-${fabrication.version}-air-moxie.swf"-->
              <!--overwrite="true"/>-->
        <!--<zip destfile="${dist.dir}/fabrication-${fabrication.version}-air-moxie.zip">-->
            <!--<fileset dir="${dist.dir}">-->
                <!--<include name="fabrication-${fabrication.version}-air-moxie.swc"/>-->
                <!--<include name="fabrication-${fabrication.version}-air-moxie.swf"/>-->
            <!--</fileset>-->
        <!--</zip>-->

        <!--<copy file="${bin.dir}/fabrication_flex.swc" tofile="${dist.dir}/fabrication-${fabrication.version}-flex.swc"-->
              <!--overwrite="true"/>-->
        <!--<copy file="${bin.dir}/rsl/fabrication_flex/library.swf"-->
              <!--tofile="${dist.dir}/fabrication-${fabrication.version}-flex.swf"-->
              <!--overwrite="true"/>-->
        <!--<zip destfile="${dist.dir}/fabrication-${fabrication.version}-flex.zip">-->
            <!--<fileset dir="${dist.dir}">-->
                <!--<include name="fabrication-${fabrication.version}-flex.swc"/>-->
                <!--<include name="fabrication-${fabrication.version}-flex.swf"/>-->
            <!--</fileset>-->
        <!--</zip>-->

        <!--<copy file="${bin.dir}/fabrication_flex_moxie.swc"-->
              <!--tofile="${dist.dir}/fabrication-${fabrication.version}-flex-moxie.swc"-->
              <!--overwrite="true"/>-->
        <!--<copy file="${bin.dir}/rsl/fabrication_flex_moxie/library.swf"-->
              <!--tofile="${dist.dir}/fabrication-${fabrication.version}-flex-moxie.swf"-->
              <!--overwrite="true"/>-->
        <!--<zip destfile="${dist.dir}/fabrication-${fabrication.version}-flex-moxie.zip">-->
            <!--<fileset dir="${dist.dir}">-->
                <!--<include name="fabrication-${fabrication.version}-flex-moxie.swc"/>-->
                <!--<include name="fabrication-${fabrication.version}-flex-moxie.swf"/>-->
            <!--</fileset>-->
        <!--</zip>-->

        <!--<copy file="${bin.dir}/fabrication_as3.swc" tofile="${dist.dir}/fabrication-${fabrication.version}-as3.swc"-->
              <!--overwrite="true"/>-->
        <!--<copy file="${bin.dir}/rsl/fabrication_as3/library.swf"-->
              <!--tofile="${dist.dir}/fabrication-${fabrication.version}-as3.swf"-->
              <!--overwrite="true"/>-->
        <!--<zip destfile="${dist.dir}/fabrication-${fabrication.version}-as3.zip">-->
            <!--<fileset dir="${dist.dir}">-->
                <!--<include name="fabrication-${fabrication.version}-as3.swc"/>-->
                <!--<include name="fabrication-${fabrication.version}-as3.swf"/>-->
            <!--</fileset>-->
        <!--</zip>-->

        <!--<copy file="${bin.dir}/fabrication_rpc.swc" tofile="${dist.dir}/fabrication-${fabrication.version}-rpc.swc"-->
              <!--overwrite="true"/>-->
        <!--<copy file="${bin.dir}/rsl/fabrication_rpc/library.swf"-->
              <!--tofile="${dist.dir}/fabrication-${fabrication.version}-rpc.swf"-->
              <!--overwrite="true"/>-->
        <!--<zip destfile="${dist.dir}/fabrication-${fabrication.version}-rpc.zip">-->
            <!--<fileset dir="${dist.dir}">-->
                <!--<include name="fabrication-${fabrication.version}-rpc.swc"/>-->
                <!--<include name="fabrication-${fabrication.version}-rpc.swf"/>-->
            <!--</fileset>-->
        <!--</zip>-->


        <zip destfile="${dist.dir}/fabrication-${fabrication.version}-src.zip">
            <fileset dir="${basedir}">
                <include name="src/**"/>
                <include name="src_rpc/**"/>
                <include name="tests/**"/>
                <include name="libs/**"/>
                <include name="etc/**"/>
                <include name="*.xml"/>
                <include name="COPYING"/>
                <include name="project.properties"/>

                <exclude name="**/*.swc"/>
                <exclude name="bin/tests/results/*.*"/>
                <exclude name="bin/tests/results"/>
                <exclude name="bin/tests/reports/**/*.*"/>
                <exclude name="bin/tests/reports/*.*"/>
                <exclude name="bin/tests/reports"/>
                <exclude name="bin/tests/swfobject/*.*"/>
                <exclude name="bin/tests/swfobject"/>
                <exclude name="bin/tests/index.html"/>
            </fileset>
        </zip>

        <zip destfile="${dist.dir}/fabrication-api-full.zip">
            <fileset dir="${asdoc.full.dir}">
                <include name="**/*.*"/>
            </fileset>
        </zip>

        <zip destfile="${dist.dir}/fabrication-api-public.zip">
            <fileset dir="${asdoc.public.dir}">
                <include name="**/*.*"/>
            </fileset>
        </zip>

        <zip destfile="${dist.dir}/fabrication-api-rpc.zip">
            <fileset dir="${asdoc.rpc.dir}">
                <include name="**/*.*"/>
            </fileset>
        </zip>

    </target>

    <target name="publish.to.blog">

        <ftp server="${blog.ftp.server}"
             userid="${blog.ftp.user}" password="${blog.ftp.password}"
             action="put"
             remotedir="${blog.ftp.remotedir}/tests" newer="true">
            <fileset dir="${bin.dir}/tests">
                <exclude name="results/**/*.*"/>
            </fileset>
        </ftp>

        <ftp server="${blog.ftp.server}"
             userid="${blog.ftp.user}" password="${blog.ftp.password}"
             action="put"
             remotedir="${blog.ftp.remotedir}/api" newer="true">
            <fileset dir="${doc.dir}">
                <include name="public/**/*.*"/>
                <include name="full/**/*.*"/>
                <include name="rpc/**/*.*"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="fabrication-api*.zip"/>
            </fileset>
        </ftp>

    </target>

    <target name="google.code.upload">

        <gcupload
                username="${googlecode.user}"
                password="${googlecode.pass}"
                projectname="fabrication"
                filename="${dist.dir}/fabrication-${fabrication.version}-air.zip"
                targetfilename="fabrication-${fabrication.version}-air.zip"
                summary="Fabrication ${fabrication.version} library for AIR"
                labels="Featured, Type-Package, OpSys-All"/>

        <gcupload
                username="${googlecode.user}"
                password="${googlecode.pass}"
                projectname="fabrication"
                filename="${dist.dir}/fabrication-${fabrication.version}-air-moxie.zip"
                targetfilename="fabrication-${fabrication.version}-air-moxie.zip"
                summary="Fabrication ${fabrication.version} library for AIR ( flex3 only )"
                labels="Featured, Type-Package, OpSys-All"/>

        <gcupload
                username="${googlecode.user}"
                password="${googlecode.pass}"
                projectname="fabrication"
                filename="${dist.dir}/fabrication-${fabrication.version}-flex.zip"
                targetfilename="fabrication-${fabrication.version}-flex.zip"
                summary="Fabrication ${fabrication.version} library for Flex"
                labels="Featured, Type-Package, OpSys-All"/>

        <gcupload
                username="${googlecode.user}"
                password="${googlecode.pass}"
                projectname="fabrication"
                filename="${dist.dir}/fabrication-${fabrication.version}-flex-moxie.zip"
                targetfilename="fabrication-${fabrication.version}-flex-moxie.zip"
                summary="Fabrication ${fabrication.version} library for Flex ( flex3 only )"
                labels="Featured, Type-Package, OpSys-All"/>

        <gcupload
                username="${googlecode.user}"
                password="${googlecode.pass}"
                projectname="fabrication"
                filename="${dist.dir}/fabrication-${fabrication.version}-as3.zip"
                targetfilename="fabrication-${fabrication.version}-as3.zip"
                summary="Fabrication ${fabrication.version} library for Flash ( pure as3 )"
                labels="Featured, Type-Package, OpSys-All"/>

        <gcupload
                username="${googlecode.user}"
                password="${googlecode.pass}"
                projectname="fabrication"
                filename="${dist.dir}/fabrication-${fabrication.version}-src.zip"
                targetfilename="fabrication-${fabrication.version}-src.zip"
                summary="Fabrication ${fabrication.version} Source Zip"
                labels="Featured, Type-Archive, OpSys-All"/>
        <gcupload
                username="${googlecode.user}"
                password="${googlecode.pass}"
                projectname="fabrication"
                filename="${dist.dir}/fabrication-${fabrication.version}-rpc.zip"
                targetfilename="fabrication-${fabrication.version}-rpc.zip"
                summary="Fabrication ${fabrication.version} RPC extension"
                labels="Featured, Type-Package, OpSys-All"/>


    </target>

    <target name="sent.to.ministry" description="publish to ministry rsl">
         <ftp server="theministryofideas.biz"
             userid="themoiprod" password="TheMoI.2o1o"
             action="put"
             remotedir="subdomains/rsl/httpdocs/fabrication" newer="true" verbose="true">
            <fileset dir="${bin.dir}/fabrication-air/rsl">
                <include name="*.swf"/>
            </fileset>
             <fileset dir="${bin.dir}/fabrication-air-moxie/rsl">
                <include name="*.swf"/>
            </fileset>
             <fileset dir="${bin.dir}/fabrication-flex/rsl">
                <include name="*.swf"/>
            </fileset>
             <fileset dir="${bin.dir}/fabrication-flex-moxie/rsl">
                <include name="*.swf"/>
            </fileset>
             <fileset dir="${bin.dir}/fabrication-as3/rsl">
                <include name="*.swf"/>
            </fileset>
             <fileset dir="${bin.dir}/fabrication-rpc/rsl">
                <include name="*.swf"/>
            </fileset>
        </ftp>
        <ftp server="theministryofideas.biz"
             userid="themoiprod" password="TheMoI.2o1o"
             action="mkdir"
             remotedir="subdomains/rsl/httpdocs/fabrication/${fabrication.version}" newer="true" verbose="true">
        </ftp>
        <ftp server="theministryofideas.biz"
             userid="themoiprod" password="TheMoI.2o1o"
             action="put"
             remotedir="subdomains/rsl/httpdocs/fabrication/${fabrication.version}" newer="true" verbose="true">
            <fileset dir="${bin.dir}/fabrication-air/rsl">
                <include name="*.swf"/>
            </fileset>
             <fileset dir="${bin.dir}/fabrication-air-moxie/rsl">
                <include name="*.swf"/>
            </fileset>
             <fileset dir="${bin.dir}/fabrication-flex/rsl">
                <include name="*.swf"/>
            </fileset>
             <fileset dir="${bin.dir}/fabrication-flex-moxie/rsl">
                <include name="*.swf"/>
            </fileset>
             <fileset dir="${bin.dir}/fabrication-as3/rsl">
                <include name="*.swf"/>
            </fileset>
             <fileset dir="${bin.dir}/fabrication-rpc/rsl">
                <include name="*.swf"/>
            </fileset>
        </ftp>
    </target>

</project>